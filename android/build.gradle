apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.10.+'
    }
}
apply plugin: 'android'

repositories {
    maven { url 'http://vincent.xenonapps.com:8081/nexus/content/groups/public/' }
}

dependencies {
    compile 'com.google.android.gms:play-services:+'
    compile 'com.google.maps.android:android-maps-utils:0.3+'
    compile 'com.xenonapps.greenup:apiconnector:0.0.1'
    //    compile('com.google.code.gson:gson:2.2.4')
    //    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'

}

android {
    compileSdkVersion 17
    buildToolsVersion '19.0.3'
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    defaultConfig {}
    productFlavors {
    }
    buildTypes {
    }

    applicationVariants.all{ variant ->
        variant.processManifest.doFirst {
            File manifestFile = file("${buildDir}/exploded-aar/com.google.maps.android/android-maps-utils/0.3/AndroidManifest.xml")
            if (manifestFile.exists()) {
                String content = manifestFile.getText('UTF-8')
                content = content.replaceAll(/minSdkVersion="8"/, 'minSdkVersion=\"9\"')
                manifestFile.write(content, 'UTF-8')
            }
        }
    }
}
